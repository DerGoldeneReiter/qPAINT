#   Template for segmenting data sets
#
#   read in locs_picked.hdf5 files to segment data sets for analyzation
#   read in render.hdf5 files to segment data sets you want to visualize in render
#%%
# Load modules
import os #platform independent paths
# Load&Reload own modules
import importlib
import file_formats as fifo
importlib.reload(fifo)

#%%
# Define folder of locs_picked.hdf5 file
dir_names=['/fs/pool/pool-schwille-paint/Data/D042/18-08-28_9nt_highP_varROIs_B/id15-80_P1-Cy3b-4nM_p100mW-50deg_flat_5/18-08-27_FS/ng7k/segment_circle/']

# Define names of locs_picked.hdf5 file
file_names=['id15-80_P1-Cy3b-4nM_p100mW-50deg_flat_5_MMStack.ome_locs_render_s5_picked_avg3-p40.hdf5']

# Create full path list
path=[]
for i in range(0, len(file_names)):
    path.append(os.path.join(dir_names[i],file_names[i]))

# Which field should be removed?
field='group'

# Remove field from all locs files
for p in range(0,len(path)):
    locs=fifo.read_locs(path[p]) # read in locs file
    locs_removed=fifo.remove_field(locs,field) # Remove field from locs
    locs_savename=path[p].replace('.hdf5','_rm.hdf5') # Define name for saving locs_removed
    fifo.save_locs(locs_removed,locs_savename) # Save locs file under locs_savename
    ADDdict={'Generated by':'file_formats.remove_field','Removed field':field} # Create additional entry for yaml file
    fifo.create_meta_locs2groupprops(path[p],ADDdict,extension='_rm.yaml') # Save yaml file
    

