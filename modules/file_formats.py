# Load packages
import h5py as h5py #hdf5 handling
import yaml

#%%
def read_locs(path):
    # Open locs_picked.hdf5 file
    locs_file=h5py.File(path,'r')
    # Load dataset 'locs' into np.array 'locs'
    locs=locs_file['locs'][...]
    locs_file.close()
    # Sort locs after groups and frames
    locs.sort(order=['group','frame'],axis=0)
    
    return locs

#%%
def read_sum(path):
    # Open locs_picked.hdf5 file
    locs_file=h5py.File(path,'r')
    # Load dataset 'locs' into np.array 'locs'
    locs=locs_file['locs'][...]
    locs_file.close()
    
    return locs
#%%
def read_meta(path):
    # Read in .yaml file generated by picasso
    stream=open(str.replace(path,'.hdf5','.yaml'))
    doc=yaml.load_all(stream)
    
    i=0
    for data in doc:
        if(i==0): TIFmeta=data
        if(i==1): LOCmeta=data
        i=i+1
    
    stream.close()
    
    return [TIFmeta,LOCmeta]
#%%
def create_meta_locs2groupprops(path,ADDdict):
    # Read in yaml.file generated by Picasso
    [TIFdict,LOCdict]=read_meta(path)
    
    # open .yaml file generated by picasso
    with open(str.replace(path,'.hdf5','_groupprops.yaml'),'w') as yaml_file:
        # Copy old yaml file into new yaml file
        yaml.dump(TIFdict,yaml_file,default_flow_style=False)
        yaml.dump(LOCdict,yaml_file,default_flow_style=False,explicit_start=True)
        # Add ADDdict to yaml file
        yaml.dump(ADDdict,yaml_file,default_flow_style=False,explicit_start=True)
        
    return
#%%
def create_meta_sum2groupprops(path,ADDdict):
    # Read in yaml.file generated by Picasso
    [TIFdict,LOCdict]=read_meta(path)
    
    # open .yaml file generated by picasso
    with open(str.replace(path,'sum.hdf5','sum_groupprops.yaml'),'w') as yaml_file:
        # Copy old yaml file into new yaml file
        yaml.dump(TIFdict,yaml_file,default_flow_style=False)
        yaml.dump(LOCdict,yaml_file,default_flow_style=False,explicit_start=True)
        # Add ADDdict to yaml file
        yaml.dump(ADDdict,yaml_file,default_flow_style=False,explicit_start=True)
        
    return
#%%
def create_meta_simulate(path,TIFdict,LOCdict):
    
    with open(path.replace('.hdf5','.yaml'),'w') as yaml_file:
        # Copy old yaml file into new yaml file
        yaml.dump(TIFdict,yaml_file,default_flow_style=False)
        yaml.dump(LOCdict,yaml_file,default_flow_style=False,explicit_start=True)
        
    return
#%%
def read_groupprops(path):
    
    groupprops_file=h5py.File(path,'r')
    groupprops=groupprops_file['locs'][...]
    groupprops_file.close()
    
    return groupprops

#%%
def read_pickprops(path):
    
    pickprops_file=h5py.File(path,'r')
    for name in pickprops_file: print(name)
    pickprops=pickprops_file['groups'][...]
    pickprops_file.close()
    
    return pickprops